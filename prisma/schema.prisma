// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum LicenseQlik {
  professional
  analyzer
}

model User {
  id     String  @id @default(uuid())
  name   String?
  email  String  @unique
  idQlik String  @map("id_qlik")

  licenseQlik LicenseQlik? @map("license_qlik")

  isAdmin Boolean @map("is_admin")

  userVisions UserVision[]
  @@map("user")
}

model Space {
  id    String  @id @default(uuid())
  name  String  @unique
  slug  String  @unique
  group Group[]


  @@map("space")
}

model Group {
  id   String @id @default(uuid())
  name String
  slug String

  space   Space    @relation(fields: [spaceId], references: [id])
  spaceId String   @map("space_id")
  visions Vision[]


  @@map("group")
}

model Vision {
  id   String @id @default(uuid())
  name String
  slug String

  layout Json?

  group   Group   @relation(fields: [groupId], references: [id])
  groupId String  @map("group_id")
  panel   Panel[]


  userVisions UserVision[]
  @@map("vision")
}

model Panel {
  id   String @id @default(uuid())
  name String

  url String @unique

  vision   Vision @relation(fields: [visionId], references: [id])
  visionId String @map("vision_id")

  isFull Boolean @default(false) @map("is_full")


  @@map("panel")
}

model UserVision {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  vision   Vision @relation(fields: [visionId], references: [id])
  visionId String @map("vision_id")


  @@map("user_panel")
}
